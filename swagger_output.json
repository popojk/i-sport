{
  "swagger": "3.0",
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "ISPORT API",
    "description": ""
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "用戶 router"
    },
    {
      "name": "Stores",
      "description": "Stores router"
    }
  ],
  "schemes": [
    "http"
  ],
  "components": {
    "schemas": {
      "UserSigninBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserSigninResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "integer"
          },
          "avatar": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "UserSignupResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "UserAccountResponse": {
        "type": "object",
        "properties": {
          "message": {
            "id": "number"
          },
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "PutUserAccountBody": {
        "type": "array",
        "properties": {
          "email": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "avatar": {
            "type": "file"
          }
        }
      },
      "PutUserAccountResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "GetUserStoresResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "storeName": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "introduction": {
            "type": "string"
          },
          "reviewCounts": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      },
      "UserGetOneStoreResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "storeName": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "introduction": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "reviewCounts": {
            "type": "number"
          },
          "rating": {
            "type": "number"
          },
          "isLiked": {
            "type": "boolean"
          }
        }
      },
      "UserGetClassesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "storeName": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "weekDay": {
            "type": "string"
          },
          "isReserved": {
            "type": "boolean"
          },
          "isClosed": {
            "type": "boolean"
          }
        }
      },
      "GetStorePlansResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "planName": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/api/signin": {
      "post": {
        "description": "",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "user signin",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSigninBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "帳號密碼都必須輸入",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserSigninResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "post": {
        "description": "user sign up",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "兩次密碼不同回傳'第二次輸入密碼有誤'，email已註冊過回傳'email已重複註冊'",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignupResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/account": {
      "get": {
        "description": "get user account info",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccountResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "修改用戶帳戶資料'",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "description": "暱稱名稱不可超過50字，email已註冊過回傳'email已重複註冊",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutUserAccountBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PutUserAccountResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores": {
      "get": {
        "description": "get all stores in user main page",
        "tags": [
          "Stores"
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserStoresResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/{store_id}": {
      "get": {
        "description": "user get one store information",
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "store_id不存在時回傳'場館不存在'",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserGetOneStoreResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/{store_id}/classes": {
      "get": {
        "description": "User get store classes",
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserGetClassesResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/{store_id}/plans": {
      "get": {
        "description": "Get plans for sale of a store",
        "tags": [
          "Stores"
        ],
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "如無商家無方案時回傳'商家無方案'",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStorePlansResponse"
                }
              }
            }
          },
          "500": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/stores/{store_id}/reviews": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/stores/{store_id}/like": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/stores/{store_id}/unlike": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/signin": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/users": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/owner/users/account": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/users/password": {
      "put": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/stores": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/stores/{store_id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/stores/{store_id}/classes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/classes/{schedule_id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/stores/{store_id}/plans": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/plans/{plan_id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/owner/stores/{store_id}/reviews": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    
    "/api/users/password": {
      "put": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/plans": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/like_stores": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/users/reservations": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/classes/{class_id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/reservations/{reservation_id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  }
}